// Load Wi-Fi library
#include <WiFi.h>
#include <HTTPClient.h>

// set pin numbers 
const int ledLog = 4;  // the number of the pushbutton pin for logistics department
const int ledlab =  5;    // the number of the LED pin for logistics department


// Auxiliar variables to store the current output state
String ledlabState = "/lab/off"; 
String ledLogState = "/log/off"; 
char* result; 

// Replace with your network credentials
char* ssid = "AZ_Zeno_Gast";
char* password = "";


// Set web server port number to 80
WiFiServer server(80);

// Variable to store the HTTP request
String header;

// Current time
unsigned long currentTime = millis();
// Previous time
unsigned long previousTime = 0; 
// Define timeout time in milliseconds (example: 2000ms = 2s)
const long timeoutTime = 2000;
//Your Domain name with URL path or IP address with path
String serverNameLog = "http://172.27.4.101/";
String serverNameLab = "http://172.27.7.39/";

// the following variables are unsigned longs because the time, measured in
// milliseconds, will quickly become a bigger number than can be stored in an int.
unsigned long lastTime = 0;
// Timer set to 10 minutes (600000)
//unsigned long timerDelay = 600000;
// Set timer to 5 seconds (5000)
unsigned long timerDelay = 5000;


void setup() {
   // Serial port for debugging purposes
  Serial.begin(115200);  
  
  // initialize the LED pin as an output for logistics department
  pinMode(ledLog, OUTPUT);
  pinMode(ledlab, OUTPUT);

   digitalWrite(ledLog, LOW);
   digitalWrite(ledlab, LOW);
  
  // Connect to Wi-Fi network with SSID and password
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
       digitalWrite(ledLog, HIGH);
   digitalWrite(ledlab, HIGH);
    delay(500);
    Serial.print(".");
  }
  // Print local IP address and start web server
  Serial.println("");
  Serial.println("WiFi connected.");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  server.begin();
}

void loop() {

  if ((millis() - lastTime) > timerDelay) {
    //Check WiFi connection status
    if(WiFi.status()== WL_CONNECTED){
      HTTPClient http;

      String serverPathLog = serverNameLog;
      
      // Your Domain name with URL path or IP address with path
      http.begin(serverPathLog.c_str());
      
      
      // Send HTTP GET request
      int httpResponseCode = http.GET();
      
      if (httpResponseCode>0) {
        Serial.print("HTTP Response code: ");
        Serial.println(httpResponseCode);
        String payload = http.getString();
        Serial.println(payload);
      // Convert the payload and word to lowercase for case-insensitive comparison
        payload.toLowerCase();
      ledLogState.toLowerCase();

        char* resultLog = strstr(payload.c_str(), ledLogState.c_str());
      if (resultLog != nullptr) {
    digitalWrite(ledLog, LOW);
    } else {
    digitalWrite(ledLog, HIGH);
    }
    }
      else {
        Serial.print("Error code: ");
        Serial.println(httpResponseCode);
        digitalWrite(ledLog, HIGH);
      }
http.end();
    
    
    
      String serverPathLab = serverNameLab;
      
      // Your Domain name with URL path or IP address with path
      http.begin(serverPathLab.c_str());
      
      
      // Send HTTP GET request
      httpResponseCode = http.GET();
      
      if (httpResponseCode>0) {
        Serial.print("HTTP Response code: ");
        Serial.println(httpResponseCode);
        String payload = http.getString();
        Serial.println(payload);
      // Convert the payload and word to lowercase for case-insensitive comparison
        payload.toLowerCase();
        ledlabState.toLowerCase();

        char* resultLab = strstr(payload.c_str(), ledlabState.c_str());
        Serial.print(resultLab);
      if (resultLab != nullptr) {
    digitalWrite(ledlab, LOW);
    } else {
    digitalWrite(ledlab, HIGH);
    }

      }
      else {
        Serial.print("Error code: ");
        Serial.println(httpResponseCode);
        digitalWrite(ledlab, HIGH);
      }
      // Free resources
      http.end();
    }
    else {
      Serial.println("WiFi Disconnected");
    }
    lastTime = millis();
  }
}
